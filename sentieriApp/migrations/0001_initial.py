# Generated by Django 2.2.1 on 2019-06-24 09:11

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Utente',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False,
                                                     help_text='Designates that this user has all permissions without explicitly assigning them.',
                                                     verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'},
                                              help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.',
                                              max_length=150, unique=True,
                                              validators=[django.contrib.auth.validators.UnicodeUsernameValidator()],
                                              verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False,
                                                 help_text='Designates whether the user can log into this admin site.',
                                                 verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True,
                                                  help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.',
                                                  verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True,
                                                  help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.',
                                                  related_name='user_set', related_query_name='user', to='auth.Group',
                                                  verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.',
                                                            related_name='user_set', related_query_name='user',
                                                            to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Utente',
                'verbose_name_plural': 'Utenti',
                'db_table': 'utente',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Categoria',
            fields=[
                ('nome', models.CharField(max_length=30, primary_key=True, serialize=False)),
                ('descrizione', models.TextField()),
            ],
            options={
                'verbose_name': 'Categoria',
                'verbose_name_plural': 'Categorie',
                'db_table': 'categoria',
            },
        ),
        migrations.CreateModel(
            name='Citta',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=30)),
            ],
            options={
                'verbose_name': 'Città',
                'verbose_name_plural': 'Città',
                'db_table': 'citta',
            },
        ),
        migrations.CreateModel(
            name='Data',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inizio', models.DateTimeField()),
                ('fine', models.DateTimeField()),
            ],
            options={
                'verbose_name': 'Data',
                'verbose_name_plural': 'Date',
                'db_table': 'data',
            },
        ),
        migrations.CreateModel(
            name='Difficolta',
            fields=[
                ('nome', models.CharField(
                    choices=[('T', 'Turistico'), ('E', 'Escursionistico'), ('EE', 'Escursionisti esperti'),
                             ('EEA', 'Escursionisti esperti con attrezzatura')], default='E', max_length=3,
                    primary_key=True, serialize=False)),
            ],
            options={
                'verbose_name': 'Difficoltà',
                'verbose_name_plural': 'Difficoltà',
                'db_table': 'difficolta',
            },
        ),
        migrations.CreateModel(
            name='Luogo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=30)),
                ('descrizione', models.TextField()),
                ('sito', models.URLField(blank=True, default='')),
            ],
            options={
                'verbose_name': 'Luogo',
                'verbose_name_plural': 'Luoghi',
                'db_table': 'luogo',
            },
        ),
        migrations.CreateModel(
            name='Nazione',
            fields=[
                ('nome', models.CharField(max_length=30, primary_key=True, serialize=False)),
            ],
            options={
                'verbose_name': 'Nazione',
                'verbose_name_plural': 'Nazioni',
                'db_table': 'nazione',
            },
        ),
        migrations.CreateModel(
            name='PuntoGeografico',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('latitudine', models.CharField(max_length=15)),
                ('longitudine', models.CharField(max_length=15)),
                ('altitudine', models.IntegerField()),
                ('nome', models.CharField(max_length=30)),
                ('descrizione', models.TextField(blank=True, default='')),
                ('meteo', models.URLField(blank=True, default='')),
                ('provincia', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sentieriApp.Citta')),
            ],
            options={
                'verbose_name': 'Punto Geografico',
                'verbose_name_plural': 'Punti Geografici',
                'db_table': 'punto_geografico',
            },
        ),
        migrations.CreateModel(
            name='Sentiero',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titolo', models.CharField(max_length=30)),
                ('durata', models.DateTimeField()),
                ('descrizione', models.TextField()),
                ('lunghezza', models.FloatField()),
                ('salita', models.IntegerField()),
                ('discesa', models.IntegerField()),
                ('altitudineMax', models.IntegerField()),
                ('altitudineMin', models.IntegerField()),
                ('visite', models.IntegerField(default=0)),
                ('ciclico', models.BooleanField(default=False)),
                ('linkMappa', models.URLField(blank=True, default='')),
                ('difficoltaMedia', models.IntegerField()),
                ('ptoGeograficoArrivo',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='arrivo',
                                   to='sentieriApp.PuntoGeografico')),
                ('ptoGeograficoPartenza',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='partenza',
                                   to='sentieriApp.PuntoGeografico')),
            ],
            options={
                'verbose_name': 'Sentiero',
                'verbose_name_plural': 'Sentieri',
                'db_table': 'sentiero',
            },
        ),
        migrations.CreateModel(
            name='TipologiaLuogo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=30)),
                ('descrizione', models.TextField()),
            ],
            options={
                'verbose_name': 'Tipologia luogo',
                'verbose_name_plural': 'Tipologie luogo',
                'db_table': 'tipologia_luogo',
            },
        ),
        migrations.CreateModel(
            name='Tappa',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('luogo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sentieriApp.Luogo')),
                ('sentiero', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sentieriApp.Sentiero')),
            ],
            options={
                'verbose_name': 'Tappa',
                'verbose_name_plural': 'Tappe',
                'db_table': 'tappa',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('categoria', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sentieriApp.Categoria')),
                ('sentiero', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sentieriApp.Sentiero')),
            ],
            options={
                'verbose_name': 'Tag',
                'verbose_name_plural': 'Tags',
                'db_table': 'tag',
            },
        ),
        migrations.CreateModel(
            name='Preferito',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sentiero', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sentieriApp.Sentiero')),
                (
                'user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='luogo',
            name='ptoGeografico',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sentieriApp.PuntoGeografico'),
        ),
        migrations.AddField(
            model_name='luogo',
            name='tipoLuogo',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sentieriApp.TipologiaLuogo'),
        ),
        migrations.CreateModel(
            name='Interessi',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('categoria', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sentieriApp.Categoria')),
                (
                'user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Interesse',
                'verbose_name_plural': 'Interessi',
                'db_table': 'interesse',
            },
        ),
        migrations.CreateModel(
            name='EsperienzaPersonale',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('voto', models.IntegerField()),
                ('data', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sentieriApp.Data')),
                ('difficolta',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sentieriApp.Difficolta')),
                ('sentiero', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sentieriApp.Sentiero')),
                (
                'user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Esperienza personale',
                'verbose_name_plural': 'Esperienze personale',
                'db_table': 'esperienza',
            },
        ),
        migrations.CreateModel(
            name='Commento',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('testo', models.TextField()),
                ('esperienza',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sentieriApp.EsperienzaPersonale')),
            ],
            options={
                'verbose_name': 'Commento',
                'verbose_name_plural': 'Commenti',
                'db_table': 'commento',
            },
        ),
        migrations.AddField(
            model_name='citta',
            name='nazione',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sentieriApp.Nazione'),
        ),
        migrations.AlterUniqueTogether(
            name='citta',
            unique_together={('nome', 'nazione')},
        ),
    ]
